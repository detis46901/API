{"version":3,"sources":["app.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,IAAO,OAAO,WAAW,SAAS,CAAC,CAAC;AACpC,4BAA+B,aAAa,CAAC,CAAA;AAC7C,IAAO,YAAY,WAAW,cAAc,CAAC,CAAC;AAC9C,IAAO,IAAI,WAAW,MAAM,CAAC,CAAC;AAC9B,qBAAmB,MAAM,CAAC,CAAA;AAC1B,IAAO,sBAAsB,WAAW,qDAAqD,CAAC,CAAC;AAC/F,IAAO,eAAe,WAAY,8CAA8C,CAAC,CAAA;AACjF,IAAO,eAAe,WAAW,8CAA8C,CAAC,CAAC;AACjF,IAAO,oBAAoB,WAAW,sDAAsD,CAAC,CAAC;AAC9F,IAAO,cAAc,WAAW,6CAA6C,CAAC,CAAC;AAC/E,IAAO,uBAAuB,WAAW,yDAAyD,CAAC,CAAC;AACpG,IAAO,yBAAyB,WAAW,2DAA2D,CAAC,CAAC;AACxG,IAAO,gBAAgB,WAAW,iDAAiD,CAAC,CAAC;AACrF,IAAO,aAAa,WAAW,qDAAqD,CAAC,CAAC;AACtF,IAAO,iBAAiB,WAAW,yDAAyD,CAAC,CAAC;AAE9F,IAAI,GAAG,GAAG,OAAO,EAAE,CAAC;AAEpB,gBAAgB;AAChB,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACtB,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,WAAI,CAAE,SAAS,EAAE,QAAQ,CAAC,CAAE,CAAC,CAAC,uCAAuC;AACtF,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;AAC/B,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;AAC3C,GAAG,CAAC,GAAG,CAAC,wBAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACxC,GAAG,CAAC,GAAG,CAAC,kBAAI,EAAE,CAAC,CAAC;AAChB,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAChB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,WAAI,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;AACvD,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;AAExB,SAAS;AACT,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC;AACvC,GAAG,CAAC,GAAG,CAAC,mBAAmB,EAAE,sBAAsB,CAAC,CAAA;AACpD,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,eAAe,CAAC,CAAA;AACtC,GAAG,CAAC,GAAG,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,CAAC;AACjD,GAAG,CAAC,GAAG,CAAC,sBAAsB,EAAE,yBAAyB,CAAC,CAAC;AAC3D,GAAG,CAAC,GAAG,CAAC,oBAAoB,EAAE,uBAAuB,CAAC,CAAC;AACvD,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC;AACzC,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAC;AACzC,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;AACnC,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,iBAAiB,CAAC,CAAA;AAG1C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;IAC1B,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC;AAEQ,WAAG,GAAG,GAAG,CAAC;AAGrB,gCAAgC;AAChC,yCAAyC;AACzC,2DAA2D;AAC3D,+BAA+B;AAC/B,+BAA+B;AAE/B,0DAA0D","file":"../app.js","sourcesContent":["/// <reference path='_references.ts' />\r\nimport express = require('express');\r\nimport {urlencoded, json} from 'body-parser';\r\nimport errorHandler = require('errorhandler');\r\nimport cors = require('cors');\r\nimport {join} from 'path';\r\nimport AuthenticateController = require('./modules/users/controllers/authenticate-controller');\r\nimport GroupController = require ('./modules/users/controllers/group-controller')\r\nimport UsersController = require('./modules/users/controllers/users-controller');\r\nimport LayerAdminController = require('./modules/layers/controllers/layers-admin-controller');\r\nimport PageController = require('./modules/users/controllers/page-controller');\r\nimport UserPageLayerController = require('./modules/layers/controllers/user-page-layer-controller');\r\nimport LayerPermissionController = require('./modules/layers/controllers/layers-permission-controller');\r\nimport ServerController = require('./modules/layers/controllers/servers-controller');\r\nimport SQLController = require('./modules/postGIS_layers/controllers/sql-controller');\r\nimport geoJSONController = require('./modules/postGIS_layers/controllers/geoJSON-controller');\r\n\r\nvar app = express();\r\n\r\n// Configuration\r\napp.set('port', 5000);\r\napp.set('views', join( __dirname, '/views') ); // critical to use path.join on windows\r\napp.set('view engine', 'vash');\r\napp.set('view options', { layout: false });\r\napp.use(urlencoded({ extended: true }));\r\napp.use(json());\r\napp.use(cors());\r\napp.use(express.static(join(__dirname, '/../client')));\r\napp.use(errorHandler());\r\n\r\n// Routes\r\napp.use('/api/users', UsersController);\r\napp.use('/api/authenticate', AuthenticateController)\r\napp.use('/api/group', GroupController)\r\napp.use('/api/layerAdmin', LayerAdminController);\r\napp.use('/api/layerpermission', LayerPermissionController);\r\napp.use('/api/userpagelayer', UserPageLayerController);\r\napp.use('/api/userpage', PageController);\r\napp.use('/api/server', ServerController);\r\napp.use('/api/sql', SQLController);\r\napp.use('/api/geojson', geoJSONController)\r\n\r\n\r\napp.listen(app.get('port'), function() {\r\n  console.log('Node app is running on port', app.get('port'));\r\n});\r\n\r\nexport var App = app;\r\n\r\n\r\n//import http = require('http');\r\n//http.createServer(function (req, res) {\r\n//    res.writeHead(200, { 'Content-Type': 'text/plain' });\r\n//    res.end('Hello World\\n');\r\n//}).listen(1337, '127.0.0.1');\r\n\r\n//console.log('Server running at http://127.0.0.1:1337/');"]}