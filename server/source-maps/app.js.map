{"version":3,"sources":["app.ts"],"names":[],"mappings":"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","file":"../app.js","sourcesContent":["/// <reference path='_references.ts' />\r\nimport express = require('express');\r\nimport {urlencoded, json} from 'body-parser';\r\nimport errorHandler = require('errorhandler');\r\nimport cors = require('cors');\r\nimport {join} from 'path';\r\nimport ParentController = require('./modules/parent-controller');\r\nimport AuthenticateController = require('./modules/users/controllers/authenticate-controller');\r\nimport GroupController = require ('./modules/users/controllers/group-controller');\r\nimport UserController = require('./modules/users/controllers/user-controller');\r\nimport GroupMemberController = require('./modules/users/controllers/group-member-controller');\r\nimport NotificationController = require('./modules/users/controllers/notification-controller');\r\nimport LayerController = require('./modules/layers/controllers/layers-controller');\r\nimport PageController = require('./modules/users/controllers/page-controller');\r\nimport UserPageLayerController = require('./modules/layers/controllers/user-page-layer-controller');\r\nimport LayerPermissionController = require('./modules/layers/controllers/layers-permission-controller');\r\nimport ServerController = require('./modules/layers/controllers/servers-controller');\r\nimport SQLController = require('./modules/postGIS_layers/controllers/sql-controller');\r\nimport geoJSONController = require('./modules/postGIS_layers/controllers/geoJSON-controller');\r\nimport ModuleController = require('./modules/feature modules/controllers/module-controller')\r\nimport ModuleInstancesController = require('./modules/feature modules/controllers/module-instances-controller')\r\nimport ModulePermissionController = require('./modules/feature modules/controllers/module-permission-controller')\r\nimport UserPageInstanceController = require('./modules/feature modules/controllers/user-page-instance-controller')\r\nimport MapConfigController = require ('./modules/mapConfig/controllers/mapConfig-controller')\r\nimport DomainController = require ('./modules/domain/controllers/domain-controller')\r\n\r\n// This portion of code is required to serve as a proxy \r\n// Listen on a specific host via the HOST environment variable\r\nvar host = process.env.HOST || '0.0.0.0';\r\n// Listen on a specific port via the PORT environment variable\r\nvar port = process.env.PORT || 9876;\r\n\r\nvar cors_proxy = require('cors-anywhere');\r\ncors_proxy.createServer({\r\n    originWhitelist: [], // Allow all origins\r\n    requireHeader: ['origin', 'x-requested-with'],\r\n    removeHeaders: ['cookie', 'cookie2']\r\n}).listen(port, host, function() {\r\n    console.log('Running CORS Anywhere on ' + host + ':' + port);\r\n});\r\n\r\nvar app = express();\r\n\r\n// Configuration\r\napp.set('port', 5000);\r\napp.set('views', join( __dirname, '/views') ); // critical to use path.join on windows\r\napp.set('view engine', 'vash');\r\napp.set('view options', { layout: false });\r\napp.use(urlencoded({ extended: true }));\r\n// app.use(json());\r\napp.use(cors());  //I had to go into the cors index.js file and change the preflightcontinue to \"true\"\r\napp.use(express.static(join(__dirname, '/../client')));\r\napp.use(errorHandler());\r\napp.use(express.json({limit: '50mb'}));\r\napp.use(express.urlencoded({limit: '50mb'}));\r\n\r\n// Routes\r\n//app.use('/api/parent', ParentController);\r\napp.use('/api/users', UserController);\r\napp.use('/api/layer', LayerController);\r\napp.use('/api/authenticate', AuthenticateController);\r\napp.use('/api/group', GroupController);\r\napp.use('/api/groupmember', GroupMemberController);\r\napp.use('/api/notification', NotificationController);\r\napp.use('/api/layerpermission', LayerPermissionController);\r\napp.use('/api/userpagelayer', UserPageLayerController);\r\napp.use('/api/userpage', PageController);\r\napp.use('/api/server', ServerController);\r\napp.use('/api/sql', SQLController);\r\napp.use('/api/geojson', geoJSONController);\r\napp.use('/api/module', ModuleController);\r\napp.use('/api/moduleinstance', ModuleInstancesController);\r\napp.use('/api/modulepermission', ModulePermissionController)\r\napp.use('/api/userpageinstance', UserPageInstanceController)\r\napp.use('/api/mapconfig', MapConfigController)\r\napp.use('/api/domain', DomainController)\r\n\r\napp.listen(app.get('port'), function() {\r\n  console.log('Node app is running on port', app.get('port'));\r\n});\r\n\r\nexport var App = app;\r\n\r\n\r\n//import http = require('http');\r\n//http.createServer(function (req, res) {\r\n//    res.writeHead(200, { 'Content-Type': 'text/plain' });\r\n//    res.end('Hello World\\n');\r\n//}).listen(1337, '127.0.0.1');\r\n\r\n//console.log('Server running at http://127.0.0.1:1337/');"]}