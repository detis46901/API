{"version":3,"sources":["core/db-connection.ts"],"names":[],"mappings":";AAAA,IAAO,SAAS,WAAW,WAAW,CAAC,CAAC;AAWxC;IAEI,IAAI,MAAM,GAAc;QACpB,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,sDAAsD;QACnF,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,eAAe;QAChD,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,UAAU;QAC/C,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,WAAW;QAChD,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,IAAI;QACjC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,KAAK;KACpC,CAAC;IAEF,MAAM,CAAC,MAAM,CAAC;AAClB,CAAC;AAED;IAEI,IAAI,MAAM,GAAG,WAAW,EAAE,CAAC;IAE3B,IAAI,SAAS,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAO;QAClF,IAAI,EAAE,MAAM,CAAC,IAAI;QACjB,OAAO,EAAE,UAAU;QACnB,IAAI,EAAE,MAAM,CAAC,IAAI;QACjB,IAAI,EAAE;YACF,GAAG,EAAE,EAAE;YACP,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,KAAK;SACd;QACD,cAAc,EAAE;YACZ,GAAG,EAAE,MAAM,CAAC,GAAG;SAClB;KAGJ,CAAC,CAAC;IAEH,MAAM,CAAC,SAAS,CAAC;AACrB,CAAC;AAED,iBAAS,gBAAgB,CAAC","file":"../../core/db-connection.js","sourcesContent":["import Sequelize = require('sequelize');\r\n\r\ninterface IDbConfig {\r\n    host?: string;\r\n    database?: string;\r\n    username?: string;\r\n    password?: string;\r\n    port?: number;\r\n    ssl?: boolean;\r\n}\r\n\r\nfunction getDbConfig() {\r\n\r\n    var config: IDbConfig = {\r\n        host: process.env.DB_HOST || 'pgis-kokomo.cdxshbbvmooi.us-east-2.rds.amazonaws.com', //''127.0.0.1', //for localhost\r\n        database: process.env.DB_NAME || 'postgres_test',\r\n        username: process.env.DB_USERNAME || 'geoadmin', //7/6/17 - db password\r\n        password: process.env.DB_PASSWORD || 'G30s3rv3r',\r\n        port: process.env.DB_PORT || 5432,\r\n        ssl: process.env.DB_PORT || false\r\n    };\r\n\r\n    return config;\r\n}\r\n\r\nfunction createConnection() {\r\n\r\n    var config = getDbConfig();\r\n\r\n    var sequelize = new Sequelize(config.database, config.username, config.password, <any>{\r\n        host: config.host,\r\n        dialect: 'postgres',\r\n        port: config.port,\r\n        pool: {\r\n            max: 10,\r\n            min: 0,\r\n            idle: 10000\r\n        },\r\n        dialectOptions: {\r\n            ssl: config.ssl\r\n        }\r\n        // SQLite only\r\n        //storage: '../sqllite'\r\n    });\r\n\r\n    return sequelize;\r\n}\r\n\r\nexport = createConnection;"]}