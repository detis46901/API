{"version":3,"sources":["core/db-connection.ts"],"names":[],"mappings":";AAAA,IAAO,SAAS,WAAW,WAAW,CAAC,CAAC;AAYxC;IAEI,qCAAqC;IACrC,4BAA4B;IAC5B,2HAA2H;IAC3H,wDAAwD;IACxD,8EAA8E;IAC9E,wDAAwD;IACxD,yCAAyC;IACzC,uCAAuC;IACvC,KAAK;IAEL,IAAI,MAAM,GAAc;QACpB,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;QACzB,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;QAC7B,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;QACjC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;QACjC,IAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QAC1C,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC;QACnC,KAAK,EAAE,IAAI;KACd,CAAC;IACF,MAAM,CAAC,MAAM,CAAC;AAClB,CAAC;AAED;IAEI,IAAI,MAAM,GAAG,WAAW,EAAE,CAAC;IAE3B,IAAI,SAAS,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAO;QAClF,IAAI,EAAE,MAAM,CAAC,IAAI;QACjB,OAAO,EAAE,UAAU;QACnB,IAAI,EAAE,MAAM,CAAC,IAAI;QACjB,IAAI,EAAE;YACF,GAAG,EAAE,EAAE;YACP,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,KAAK;SACd;QACD,cAAc,EAAE;YACZ,GAAG,EAAE,MAAM,CAAC,GAAG;SAClB;QACD,OAAO,EAAC,KAAK;KAGhB,CAAC,CAAC;IAEH,MAAM,CAAC,SAAS,CAAC;AACrB,CAAC;AAED,iBAAS,gBAAgB,CAAC","file":"../../core/db-connection.js","sourcesContent":["import Sequelize = require('sequelize');\r\n\r\ninterface IDbConfig {\r\n    host: string;\r\n    database: string;\r\n    username: string;\r\n    password: string;\r\n    port: number;\r\n    ssl?: boolean;\r\n    newdb: boolean;\r\n}\r\n\r\nfunction getDbConfig() {\r\n\r\n    //Replaced with code below on 1/18/18\r\n    // var config: IDbConfig = {\r\n    //     host: process.env.DB_HOST || 'pgis-kokomo.cdxshbbvmooi.us-east-2.rds.amazonaws.com', //''127.0.0.1', //for localhost\r\n    //     database: process.env.DB_NAME || 'postgres_test',\r\n    //     username: process.env.DB_USERNAME || 'geoadmin', //7/6/17 - db password\r\n    //     password: process.env.DB_PASSWORD || 'G30s3rv3r',\r\n    //     port: process.env.DB_PORT || 5432,\r\n    //     ssl: process.env.DB_SSL || false\r\n    // };\r\n\r\n    var config: IDbConfig = {\r\n        host: process.env.DB_HOST, //''127.0.0.1', //for localhost\r\n        database: process.env.DB_NAME,\r\n        username: process.env.DB_USERNAME, //7/6/17 - db password\r\n        password: process.env.DB_PASSWORD,\r\n        port: Number.parseInt(process.env.DB_PORT),\r\n        ssl: (process.env.DB_SSL == 'true'),\r\n        newdb: true\r\n    };\r\n    return config;\r\n}\r\n\r\nfunction createConnection() {\r\n\r\n    let config = getDbConfig();\r\n\r\n    var sequelize = new Sequelize(config.database, config.username, config.password, <any>{\r\n        host: config.host,\r\n        dialect: 'postgres',\r\n        port: config.port,\r\n        pool: {\r\n            max: 10,\r\n            min: 0,\r\n            idle: 10000\r\n        },\r\n        dialectOptions: {\r\n            ssl: config.ssl\r\n        },\r\n        logging:false\r\n        // SQLite only\r\n        //storage: '../sqllite'\r\n    });\r\n\r\n    return sequelize;\r\n}\r\n\r\nexport = createConnection;"]}