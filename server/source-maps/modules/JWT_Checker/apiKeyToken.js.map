{"version":3,"sources":["modules/JWT_Checker/apiKeyToken.ts"],"names":[],"mappings":";AAAA,IAAM,GAAG,GAAG,OAAO,CAAC,cAAc,CAAC,CAAA;AAInC,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAE,GAAG,EAAE,IAAI;IAC5B,IAAI,CAAC;QACD,oGAAoG;QACpG,iCAAiC;QACjC,4EAA4E;QAC5E,iCAAiC;QACjC,SAAS;QACT,wCAAwC;QACxC,+BAA+B;QAC/B,IAAI,EAAE,CAAC;IACX,CAAE;IAAA,KAAK,CAAA,CAAC,KAAK,CAAC,CAAC,CAAC;QACZ,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACxB,OAAO,EAAE,uBAAuB;SACnC,CAAC,CAAA;IACN,CAAC;AACL,CAAC,CAAA","file":"../../../modules/JWT_Checker/apiKeyToken.js","sourcesContent":["const jwt = require('jsonwebtoken')\r\nimport {environment} from '../../core/environment'\r\n\r\n\r\nmodule.exports = (req, res, next) => {\r\n    try {\r\n        //this is just passing through right now.  The authorization is actually in the getsheets procedure.\r\n        // const token = req.query.apikey\r\n        //     const decoded_token = jwt.verify(token, environment.JWT_SECRET_KEY, {\r\n        //         ignoreExpiration:false\r\n        //     })\r\n        //     req.loginJsonData = decoded_token\r\n        // console.log(req.query.table)\r\n        next();\r\n    } catch(error) {\r\n        return res.status(401).json({\r\n            message: \"Authorization failed.\"\r\n        })\r\n    }\r\n}"]}