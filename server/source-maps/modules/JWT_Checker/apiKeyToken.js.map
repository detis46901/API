{"version":3,"sources":["modules/JWT_Checker/apiKeyToken.ts"],"names":[],"mappings":";AAAA,IAAM,GAAG,GAAG,OAAO,CAAC,cAAc,CAAC,CAAA;AACnC,4BAA0B,wBAG1B,CAAC,CAHiD;AAGlD,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG,EAAE,GAAG,EAAE,IAAI;IAC5B,IAAI,CAAC;QACD,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,8CAA8C;QACrG,IAAM,aAAa,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,yBAAW,CAAC,cAAc,EAAE;YAChE,gBAAgB,EAAC,KAAK;SACzB,CAAC,CAAA,CAAC,mEAAmE;QACtE,GAAG,CAAC,UAAU,GAAG,aAAa,CAAA;QAC9B,IAAI,EAAE,CAAC;IACX,CAAE;IAAA,KAAK,CAAA,CAAC,KAAK,CAAC,CAAC,CAAC;QACZ,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACxB,OAAO,EAAE,uBAAuB;SACnC,CAAC,CAAA;IACN,CAAC;AACL,CAAC,CAAA","file":"../../../modules/JWT_Checker/apiKeyToken.js","sourcesContent":["const jwt = require('jsonwebtoken')\r\nimport {environment} from '../../core/environment'\r\n\r\n\r\nmodule.exports = (req, res, next) => {\r\n    try {\r\n        const token = req.headers.authorization.split(\" \")[1]; //Remove \"Bearer \" from auth header in request\r\n        const decoded_token = jwt.verify(token, environment.JWT_SECRET_KEY, {\r\n            ignoreExpiration:false\r\n        }) //jwt.verify() does jwt.decode() and verifies signature afterwards.\r\n        req.loginToken = decoded_token\r\n        next();\r\n    } catch(error) {\r\n        return res.status(401).json({\r\n            message: \"Authorization failed.\"\r\n        })\r\n    }\r\n}"]}