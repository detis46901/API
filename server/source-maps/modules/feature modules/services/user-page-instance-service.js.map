{"version":3,"sources":["modules/feature modules/services/user-page-instance-service.ts"],"names":[],"mappings":"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","file":"../../../../modules/feature modules/services/user-page-instance-service.js","sourcesContent":["import Sequelize = require('sequelize');\r\nimport UserPageInstanceModel = require('../models/user-page-instance-model');\r\nimport PageModel = require('../../users/models/page-model')\r\nimport InstanceModel = require('../models/module-instances-model')\r\nimport ModuleModel = require ('../models/module-model')\r\nimport UserModel = require('../../users/models/user-model');\r\n\r\nclass UserPageInstanceService {\r\n\r\n    getList(pageID: number): Promise<UserPageInstanceModel.UserPageInstanceInstance[]> {\r\n\r\n        var findOptions: Sequelize.FindOptions = {\r\n            order: [\r\n                'ID'\r\n            ]\r\n        };\r\n\r\n        if (pageID) {\r\n            findOptions.where = {\r\n                [Sequelize.Op.and]: [\r\n                    { pageID: pageID}\r\n                ]\r\n            }\r\n        }\r\n\r\n        return UserPageInstanceModel.Model.findAll(findOptions);\r\n    }\r\n\r\n    \r\n    getPageInstances(pageID: number): any {\r\n        var findOptions: Sequelize.FindOptions = {\r\n            order: [\r\n                'pageID'\r\n            ]\r\n        };\r\n\r\n        if (pageID) {\r\n            findOptions.where = {\r\n                [Sequelize.Op.and]: [\r\n                    { userPageID: pageID}\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    \r\n        findOptions.include = [PageModel.Model, InstanceModel.Model]\r\n\r\n        return UserPageInstanceModel.Model.findAll({order: ['ID'], where: {[Sequelize.Op.and]: [{ userPageID: pageID}]}, include: [{model: PageModel.Model}, {model: InstanceModel.Model, include: [ModuleModel.Model]}]})\r\n    }\r\n\r\n    getUserInstance(userID: number): any {\r\n        var findOptions: Sequelize.FindOptions = {\r\n            order: [\r\n                'userID'\r\n            ]\r\n        };\r\n\r\n        if (userID) {\r\n            findOptions.where = {\r\n                [Sequelize.Op.and]: [\r\n                    { userID: userID}\r\n                ]\r\n            }\r\n        }\r\n\r\n        //return UserPageLayerModel.Model.findAll({order: ['ID'], where: {[Sequelize.Op.and]: [{ userID: userID}]}, include: [{model: UserModel.Model}, {model: LayerModel.Model}, {model: PageModel.Model}]});\r\n        return UserPageInstanceModel.Model.findAll(findOptions);\r\n    }\r\n\r\n    getByInstance(instanceID: number): any {\r\n        var findOptions: Sequelize.FindOptions = {\r\n            order: [\r\n                'ID'\r\n            ]\r\n        };\r\n\r\n        if (instanceID) {\r\n            findOptions.where = {\r\n                [Sequelize.Op.and]: [\r\n                    {moduleInstanceID: instanceID}\r\n                ]\r\n            }\r\n        }\r\n\r\n        return UserPageInstanceModel.Model.findAll(findOptions);\r\n    }\r\n\r\n    get(rowID: number): Promise<UserPageInstanceModel.UserPageInstanceInstance> {\r\n        return UserPageInstanceModel.Model.findByPk(rowID);\r\n    }\r\n\r\n    create(request: App.UserPageInstance): Promise<UserPageInstanceModel.UserPageInstanceInstance> {\r\n        return UserPageInstanceModel.Model.create(request);\r\n    }\r\n\r\n    update(request: App.UserPageInstance): Promise<UserPageInstanceModel.UserPageInstanceInstance> {\r\n        \r\n        return <any>(UserPageInstanceModel.Model.findByPk(request.ID).then((UserPageInstanceInstance) => {\r\n\r\n            UserPageInstanceInstance.moduleInstanceID = request.moduleInstanceID;\r\n            UserPageInstanceInstance.userID = request.userID;\r\n            UserPageInstanceInstance.defaultON = request.defaultON;\r\n            \r\n            return UserPageInstanceInstance.save();\r\n        }));\r\n    }\r\n\r\n    delete(ID: number) {\r\n        return UserPageInstanceModel.Model.findByPk(ID).then((UserPageInstanceInstance) => {\r\n\r\n            return UserPageInstanceInstance.destroy();\r\n\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport = UserPageInstanceService;"]}