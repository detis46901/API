{"version":3,"sources":["modules/feature modules/services/module-permission-service.ts"],"names":[],"mappings":";AAAA,IAAO,SAAS,WAAW,WAAW,CAAC,CAAC;AACxC,IAAO,qBAAqB,WAAW,mCAAmC,CAAC,CAAC;AAC5E,IAAO,cAAc,WAAW,kCAAkC,CAAC,CAAA;AACnE,IAAO,SAAS,WAAW,+BAA+B,CAAC,CAAA;AAC3D,IAAO,UAAU,WAAW,gCAAgC,CAAC,CAAA;AAC7D,IAAO,YAAY,WAAW,wBAAwB,CAAC,CAAA;AACvD,IAAM,EAAE,GAAG,SAAS,CAAC,EAAE,CAAA;AAGvB;IAAA;IAoGA,CAAC;IAnGG,yCAAO,GAAP;QACI,MAAM,CAAC,qBAAqB,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACjD,CAAC;IAED,+CAAa,GAAb,UAAc,UAAkB;QAC5B,IAAI,WAAW,GAA0B;YACrC,KAAK,EAAE;gBACH,IAAI;aACP;SACJ,CAAC;QACF,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACb,WAAW,CAAC,KAAK,GAAG;gBAChB,GAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,GAAE;oBAChB,EAAE,gBAAgB,EAAE,UAAU,EAAC;iBAClC;;aACJ,CAAA;QACL,CAAC;QACD,WAAW,CAAC,OAAO,GAAG,CAAC,cAAc,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QAChF,MAAM,CAAC,qBAAqB,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;;IAC5D,CAAC;IAED,2CAAS,GAAT,UAAU,MAAc;QACpB,IAAI,WAAW,GAA0B;YACrC,KAAK,EAAE;gBACH,IAAI;aACP;SACJ,CAAC;QACF,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACT,WAAW,CAAC,KAAK,GAAG;gBAChB,GAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,GAAE;oBAChB,EAAE,MAAM,EAAE,MAAM,EAAC;iBACpB;;aACJ,CAAA;QACL,CAAC;QACD,WAAW,CAAC,OAAO,GAAG,CAAC,cAAc,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QAChF,MAAM,CAAC,qBAAqB,CAAC,KAAK,CAAC,OAAO,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,KAAK,EAAE,cAAc,CAAC,KAAK,EAAE,OAAO,EAAC,CAAC,YAAY,CAAC,KAAK,CAAC,EAAC,EAAE,EAAC,KAAK,EAAE,SAAS,CAAC,KAAK,EAAC,EAAE,EAAC,KAAK,EAAE,UAAU,CAAC,KAAK,EAAC,CAAC,EAAC,CAAC,CAAC;;IAC9K,CAAC;IAED,4CAAU,GAAV,UAAW,OAAe;QACtB,IAAI,WAAW,GAA0B;YACrC,KAAK,EAAE;gBACH,IAAI;aACP;SACJ,CAAC;QACF,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACV,WAAW,CAAC,KAAK,GAAG;gBAChB,GAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,GAAE;oBAChB,EAAE,OAAO,EAAE,OAAO,EAAC;iBACtB;;aACJ,CAAA;QACL,CAAC;QACD,WAAW,CAAC,OAAO,GAAG,CAAC,cAAc,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QAChF,MAAM,CAAC,qBAAqB,CAAC,KAAK,CAAC,OAAO,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,KAAK,EAAE,cAAc,CAAC,KAAK,EAAE,OAAO,EAAC,CAAC,YAAY,CAAC,KAAK,CAAC,EAAC,EAAE,EAAC,KAAK,EAAE,SAAS,CAAC,KAAK,EAAC,EAAE,EAAC,KAAK,EAAE,UAAU,CAAC,KAAK,EAAC,CAAC,EAAC,CAAC,CAAC;;IAC9K,CAAC;IAED,mDAAiB,GAAjB,UAAkB,MAAc,EAAE,MAAe;QAC7C,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAA;QACzC,IAAM,EAAE,GAAG,SAAS,CAAC,EAAE,CAAA;QACvB,IAAI,WAAW,GAA0B;YACrC,KAAK,EAAE;gBACH,IAAI;aACP;SACJ,CAAA;QACD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACT,WAAW,CAAC,KAAK,GAAG;gBAChB,GAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,GAAE;oBACnB,EAAC,OAAO,EAAE,UAAC,GAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,GAAC,CAAC,MAAM,CAAC,KAAC,EAAC;oBACvC,EAAC,MAAM,EAAE,MAAM,EAAC;iBACvB;;aAAC,CAAA;QACF,CAAC;QACD,WAAW,CAAC,OAAO,GAAE,CAAC,EAAC,KAAK,EAAE,cAAc,CAAC,KAAK,EAAE,OAAO,EAAC,CAAC,YAAY,CAAC,KAAK,CAAC,EAAC,EAAE,EAAC,KAAK,EAAE,SAAS,CAAC,KAAK,EAAC,EAAE,EAAC,KAAK,EAAE,UAAU,CAAC,KAAK,EAAC,CAAC,CAAC;QACxI,MAAM,CAAC,qBAAqB,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAA;;IAC3D,CAAC;IAED,qCAAG,GAAH,UAAI,EAAU;QACV,MAAM,CAAC,qBAAqB,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,wCAAM,GAAN,UAAO,OAA6B;QAChC,MAAM,CAAC,qBAAqB,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACvD,CAAC;IAED,wCAAM,GAAN,UAAO,OAA6B;QAChC,MAAM,CAAM,CAAC,qBAAqB,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,wBAAwB;YACxF,wBAAwB,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;YAC7C,wBAAwB,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;YACjD,wBAAwB,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YAC/C,wBAAwB,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;YACrD,wBAAwB,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;YACvD,wBAAwB,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;YACrD,MAAM,CAAC,wBAAwB,CAAC,IAAI,EAAE,CAAC;QAC3C,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,wCAAM,GAAN,UAAO,EAAU;QACb,MAAM,CAAC,qBAAqB,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,wBAAwB;YAC1E,MAAM,CAAC,wBAAwB,CAAC,OAAO,EAAE,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IACL,8BAAC;AAAD,CApGA,AAoGC,IAAA;AAED,iBAAS,uBAAuB,CAAC","file":"../../../../modules/feature modules/services/module-permission-service.js","sourcesContent":["import Sequelize = require('sequelize');\r\nimport ModulePermissionModel = require('../models/module-permission-model');\r\nimport ModuleInstance = require('../models/module-instances-model')\r\nimport UserModel = require('../../users/models/user-model')\r\nimport GroupModel = require('../../users/models/group-model')\r\nimport ModulesModel = require('../models/module-model')\r\nconst Op = Sequelize.or\r\n\r\n\r\nclass ModulePermissionService {\r\n    getList(): Promise<ModulePermissionModel.ModulePermissionInstance[]> {\r\n        return ModulePermissionModel.Model.findAll();\r\n    }\r\n    \r\n    getByInstance(instanceID: number): Promise<ModulePermissionModel.ModulePermissionInstance[]> {\r\n        var findOptions: Sequelize.FindOptions = {\r\n            order: [\r\n                'ID'\r\n            ]\r\n        };\r\n        if (instanceID) {\r\n            findOptions.where = {\r\n                [Sequelize.Op.and]: [\r\n                    { moduleInstanceID: instanceID}\r\n                ]\r\n            }\r\n        }\r\n        findOptions.include = [ModuleInstance.Model, UserModel.Model, GroupModel.Model];\r\n        return ModulePermissionModel.Model.findAll(findOptions);\r\n    }\r\n\r\n    getByUser(userID: number): Promise<ModulePermissionModel.ModulePermissionInstance[]> {\r\n        var findOptions: Sequelize.FindOptions = {\r\n            order: [\r\n                'ID'\r\n            ]\r\n        };\r\n        if (userID) {\r\n            findOptions.where = {\r\n                [Sequelize.Op.and]: [\r\n                    { userID: userID}\r\n                ]\r\n            }\r\n        }\r\n        findOptions.include = [ModuleInstance.Model, UserModel.Model, GroupModel.Model];\r\n        return ModulePermissionModel.Model.findAll({include: [{model: ModuleInstance.Model, include:[ModulesModel.Model]}, {model: UserModel.Model}, {model: GroupModel.Model}]});\r\n    }\r\n\r\n    getByGroup(groupID: number): Promise<ModulePermissionModel.ModulePermissionInstance[]> {\r\n        var findOptions: Sequelize.FindOptions = {\r\n            order: [\r\n                'ID'\r\n            ]\r\n        };\r\n        if (groupID) {\r\n            findOptions.where = {\r\n                [Sequelize.Op.and]: [\r\n                    { groupID: groupID}\r\n                ]\r\n            }\r\n        }\r\n        findOptions.include = [ModuleInstance.Model, UserModel.Model, GroupModel.Model];\r\n        return ModulePermissionModel.Model.findAll({include: [{model: ModuleInstance.Model, include:[ModulesModel.Model]}, {model: UserModel.Model}, {model: GroupModel.Model}]});\r\n    }\r\n\r\n    getByUserAndGroup(userID: number, groups:number[]): Promise<ModulePermissionModel.ModulePermissionInstance[]> {\r\n        console.log(\"getByUserAndGroups\", groups)\r\n        const op = Sequelize.or\r\n        var findOptions: Sequelize.FindOptions = {\r\n            order: [\r\n                'ID'\r\n            ]\r\n        }\r\n        if (userID) {\r\n            findOptions.where = {\r\n                [Sequelize.Op.or]: [\r\n                {groupID: {[Sequelize.Op.or]:[groups]}},\r\n                {userID: userID}\r\n        ]}\r\n        }\r\n        findOptions.include =[{model: ModuleInstance.Model, include:[ModulesModel.Model]}, {model: UserModel.Model}, {model: GroupModel.Model}];\r\n        return ModulePermissionModel.Model.findAll(findOptions)\r\n    }\r\n\r\n    get(ID: number): Promise<ModulePermissionModel.ModulePermissionInstance> {\r\n        return ModulePermissionModel.Model.findByPk(ID);\r\n    }\r\n\r\n    create(request: App.ModulePermission): Promise<ModulePermissionModel.ModulePermissionInstance> {\r\n        return ModulePermissionModel.Model.create(request);\r\n    }\r\n\r\n    update(request: App.ModulePermission): Promise<ModulePermissionModel.ModulePermissionInstance> {     \r\n        return <any>(ModulePermissionModel.Model.findByPk(request.ID).then((ModulePermissionInstance) => {\r\n            ModulePermissionInstance.edit = request.edit;\r\n            ModulePermissionInstance.delete = request.delete;\r\n            ModulePermissionInstance.owner = request.owner;\r\n            ModulePermissionInstance.canGrant = request.canGrant;\r\n            ModulePermissionInstance.grantedBy = request.grantedBy;\r\n            ModulePermissionInstance.comments = request.comments;\r\n            return ModulePermissionInstance.save();\r\n        }));\r\n    }\r\n\r\n    delete(ID: number) {\r\n        return ModulePermissionModel.Model.findByPk(ID).then((ModulePermissionInstance) => {\r\n            return ModulePermissionInstance.destroy();\r\n        });\r\n    }\r\n}\r\n\r\nexport = ModulePermissionService;"]}