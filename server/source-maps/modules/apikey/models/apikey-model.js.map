{"version":3,"sources":["modules/apikey/models/apikey-model.ts"],"names":[],"mappings":";AAAA,IAAO,YAAY,WAAW,6BAA6B,CAAC,CAAC;AAC7D,IAAO,SAAS,WAAW,WAAW,CAAC,CAAC;AACxC,IAAO,SAAS,WAAW,+BAA+B,CAAC,CAAA;AAE3D,IAAI,EAAE,GAAG,YAAY,EAAE,CAAC;AACxB,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAK/B,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAA;AAC/B,IAAI,cAAc,GAAG,EAAE,CAAC,MAAM,CAA6B,QAAQ,EAAO;IACtE,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE;IACtE,MAAM,EAAE;QACJ,IAAI,EAAE,SAAS,CAAC,MAAM;QACtB,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE;YACN,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;SACf;KACJ;CACJ,CAAC,CAAC;AAEH,cAAc,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;AACzC,cAAc,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,CAAA;AAEnC,sEAAsE;AACtE,2BAA2B;AAC3B,8BAA8B;AAC9B,wBAAwB;AACxB,gDAAgD;AAChD,kBAAkB;AAClB,oDAAoD;AACpD,wBAAwB;AACxB,sCAAsC;AACtC,wCAAwC;AACxC,6CAA6C;AAC7C,gCAAgC;AAChC,iCAAiC;AACjC,oDAAoD;AACpD,sCAAsC;AACtC,iBAAiB;AACjB,aAAa;AACb,QAAQ;AACR,MAAM;AAEK,aAAK,GAAG,cAAc,CAAC","file":"../../../../modules/apikey/models/apikey-model.js","sourcesContent":["import dbConnection = require('../../../core/db-connection');\r\nimport Sequelize = require('sequelize');\r\nimport UserModel = require('../../users/models/user-model')\r\n\r\nvar db = dbConnection();\r\nvar bcrypt = require('bcrypt');\r\n\r\nexport interface APIKeyInstance extends Sequelize.Instance<APIKeyInstance, App.APIKey>, App.APIKey { }\r\nexport interface APIKeyModel extends Sequelize.Model<APIKeyInstance, App.APIKey> { }\r\n\r\nconsole.log('in api-key.model')\r\nvar sequalizeModel = db.define<APIKeyInstance, App.APIKey>('apikey', <any>{\r\n    ID: { type: Sequelize.INTEGER, primaryKey: true, autoIncrement: true },\r\n    apikey: {\r\n        type: Sequelize.STRING,\r\n        allowNull: false,\r\n        validate: {\r\n            len: [2, 30]\r\n        }\r\n    }\r\n});\r\n\r\nsequalizeModel.belongsTo(UserModel.Model)\r\nsequalizeModel.sync({force: false})\r\n\r\n//Should probably update this or at least put it in the documentation.\r\n// sequalizeModel.findAll({\r\n// }).then(function (result) {\r\n//     if (!result[0]) {\r\n//         console.log(\"Creating standard user\")\r\n//         var pw;\r\n//         bcrypt.hash(\"admin\", 10, (err, hash) => {\r\n//             pw = hash\r\n//             sequalizeModel.create({\r\n//                 firstName: 'Generic',\r\n//                 lastName: 'Administrator',\r\n//                 password: pw,\r\n//                 active: false,\r\n//                 email: 'administrator@gmail.com',\r\n//                 administrator: true\r\n//             })\r\n//         })\r\n//     }\r\n// });\r\n\r\nexport var Model = sequalizeModel;"]}