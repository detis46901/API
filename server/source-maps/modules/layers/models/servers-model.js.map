{"version":3,"sources":["modules/layers/models/servers-model.ts"],"names":[],"mappings":";AAAA,IAAO,YAAY,WAAW,6BAA6B,CAAC,CAAC;AAC7D,0BAAiC,WAAW,CAAC,CAAA;AAE7C,IAAI,EAAE,GAAG,YAAY,EAAE,CAAC;AAIxB,IAAI,cAAc,GAAG,EAAE,CAAC,MAAM,CAA6B,QAAQ,EAAQ;IACvE,EAAE,EAAE;QACA,IAAI,EAAE,qBAAS,CAAC,OAAO;QACvB,UAAU,EAAE,IAAI;QAChB,aAAa,EAAE,IAAI;KACtB;IACD,UAAU,EAAE;QACR,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE;YACN,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;SACf;KACJ;IACD,UAAU,EAAE;QACR,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE;YACN,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;SACf;KACJ;IACD,SAAS,EAAE;QACP,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE;YACN,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;SAChB;KACJ;CACJ,CAAC,CAAC;AAEH,cAAc,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,CAAA;AAEnC,cAAc,CAAC,OAAO,CAAC,EACtB,CAAC,CAAC,IAAI,CAAC,UAAS,MAAM;IACnB,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC;QAChB,cAAc,CAAC,MAAM,CAAC;YACd,UAAU,EAAE,YAAY;YACxB,UAAU,EAAE,YAAY;YACxB,SAAS,EAAE,8CAA8C;SAC5D,CAAC;aACD,IAAI,CAAC;YACN,cAAc,CAAC,MAAM,CAAC;gBAClB,UAAU,EAAE,kBAAkB;gBAC9B,UAAU,EAAE,eAAe;gBAC3B,SAAS,EAAE,8CAA8C;aAC5D,CAAC,CAAA;QACV,CAAC,CAAC,CAAA;IACE,CAAC;IACL,IAAI,CAAC,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAA;IACtC,CAAC;AACD,CAAC,CAAC,CAAC;AAEQ,aAAK,GAAG,cAAc,CAAC","file":"../../../../modules/layers/models/servers-model.js","sourcesContent":["import dbConnection = require('../../../core/db-connection');\r\nimport { Model, DataTypes } from \"sequelize\";\r\n\r\nvar db = dbConnection();\r\nexport interface ServerInstance extends Model<ServerInstance, App.Server>, App.Server { }\r\nexport interface ServerModel extends Model<ServerInstance, App.Server> { }\r\n\r\nvar sequalizeModel = db.define<ServerInstance, App.Server>('server', <any> {\r\n    ID: { \r\n        type: DataTypes.INTEGER, \r\n        primaryKey: true, \r\n        autoIncrement: true \r\n    },\r\n    serverName: {\r\n        type: DataTypes.STRING,\r\n        allowNull: false,\r\n        validate: {\r\n            len: [2, 30]\r\n        }\r\n    },\r\n    serverType: {\r\n        type: DataTypes.STRING,\r\n        allowNull: false,\r\n        validate: {\r\n            len: [2, 30]\r\n        }\r\n    },\r\n    serverURL: {\r\n        type: DataTypes.STRING,\r\n        allowNull: false,\r\n        validate: {\r\n            len: [1, 200]\r\n        }\r\n    }\r\n});\r\n\r\nsequalizeModel.sync({force: false})\r\n\r\nsequalizeModel.findAll({\r\n}).then(function(result) {\r\n    if (!result[0]){\r\n    sequalizeModel.create({\r\n            serverName: \"IndianaMap\",\r\n            serverType: \"ArcGIS WMS\",\r\n            serverURL: \"http://maps.indiana.edu/arcgis/rest/services\"\r\n        })\r\n        .then(() => {\r\n        sequalizeModel.create({\r\n            serverName: \"Kokomo Geoserver\",\r\n            serverType: \"Geoserver WMS\",\r\n            serverURL: \"http://a.cityofkokomo.org:8080/geoserver/wms\"  \r\n        })\r\n})\r\n    }\r\nelse {\r\n    console.log('Users already exist')\r\n}\r\n});\r\n\r\nexport var model = sequalizeModel;"]}