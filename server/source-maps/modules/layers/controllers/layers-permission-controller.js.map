{"version":3,"sources":["modules/layers/controllers/layers-permission-controller.ts"],"names":[],"mappings":"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","file":"../../../../modules/layers/controllers/layers-permission-controller.js","sourcesContent":["import LayerPermissionService = require('../services/layers-permission-service');\r\nimport GroupMemberService = require('../../users/services/group-member-service');\r\nimport token_auth = require('../../JWT_Checker/loginToken.js');\r\nimport { GroupMemberInstance } from '../../users/models/group-member-model';\r\n\r\nvar express = require('express');\r\nvar router = express.Router();\r\nvar service = new LayerPermissionService();\r\nvar groupMemberService = new GroupMemberService();\r\n\r\nrouter.get('/list', token_auth, (req, res) => {\r\n    service.getList().then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n});\r\n\r\nrouter.get('/getbyuser', token_auth, (req, res) => {\r\n    var userid = <number>req.query.userid;   \r\n    service.getByUser(userid).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n});\r\n\r\nrouter.get('/getbylayer', token_auth, (req, res) => {\r\n    var layerid = <number>req.query.layerID;\r\n    service.getByLayer(layerid).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n});\r\n\r\nrouter.get('/getbygroup', token_auth, (req, res) => {\r\n    var groupid = <number>req.query.groupID;   \r\n    service.getByGroup(groupid).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n});\r\n\r\nrouter.get('/getbyusergroups', token_auth, (req, res) => {\r\n    var finalResponse = new Array<any>();\r\n    let groups = new Array<number>();\r\n    groupMemberService.getByUser(req.query.userID).then((result) => {\r\n        for (let i=0; i<result.length; i++) {\r\n            let gg = new Array<number>()\r\n            groups.push(result[i].groupID)\r\n        }\r\n        service.getByUserAndGroup(req.query.userID, groups).then((final) => {\r\n            res.send(final)\r\n        })\r\n    })\r\n});\r\n\r\nrouter.get('/one', token_auth, (req, res) => {\r\n\r\n    var LayerID = <number>req.query.rowid;\r\n    \r\n    service.get(LayerID).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n\r\n});\r\n\r\nrouter.post('/create', token_auth, (req, res) => {\r\n    \r\n    var request = <App.LayerPermission>req.body;\r\n    \r\n    service.create(request).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n\r\n});\r\n\r\nrouter.put('/update', token_auth, (req, res) => {\r\n    \r\n    var request = <App.LayerPermission>req.body;\r\n\r\n    service.update(request).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n\r\n});\r\n\r\nrouter.delete('/delete', token_auth, (req, res) => {\r\n    //if(req.body.delete) {\r\n    var ID = <number>req.query.ID;\r\n    service.delete(ID).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n    // } else {\r\n    //     res.status(500).json({\r\n    //         message:\"You do not have permission to delete this permission entry.\"\r\n    //     })\r\n    // }\r\n});\r\n\r\n\r\nexport = router;"]}