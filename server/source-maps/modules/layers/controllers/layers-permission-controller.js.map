{"version":3,"sources":["modules/layers/controllers/layers-permission-controller.ts"],"names":[],"mappings":"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","file":"../../../../modules/layers/controllers/layers-permission-controller.js","sourcesContent":["import express = require('express');\r\nimport LayerPermissionService = require('../services/layers-permission-service');\r\nimport token_auth = require('../../JWT_Checker/loginToken.js');\r\n\r\nvar router = express.Router();\r\nvar service = new LayerPermissionService();\r\n\r\nrouter.get('/list', token_auth, (req, res) => {\r\n    console.log(req.query.layerID)\r\n    service.getList().then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n    \r\n});\r\n\r\nrouter.get('/getbyuser', token_auth, (req, res) => {\r\n    var userid = <number>req.query.userid;   \r\n    service.getByUser(userid).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n});\r\n\r\nrouter.get('/getbylayer', token_auth, (req, res) => {\r\n    var layerid = <number>req.query.layerID;\r\n    console.log(layerid) \r\n    service.getByLayer(layerid).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n});\r\n\r\nrouter.get('/getbygroup', token_auth, (req, res) => {\r\n    var groupid = <number>req.query.groupID;   \r\n    service.getByGroup(groupid).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n});\r\n\r\nrouter.get('/one', token_auth, (req, res) => {\r\n\r\n    var LayerID = <number>req.query.rowid;\r\n    \r\n    service.get(LayerID).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n\r\n});\r\n\r\nrouter.post('/create', token_auth, (req, res) => {\r\n    \r\n    var request = <App.LayerPermission>req.body;\r\n    \r\n    service.create(request).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n\r\n});\r\n\r\nrouter.put('/update', token_auth, (req, res) => {\r\n    \r\n    var request = <App.LayerPermission>req.body;\r\n\r\n    service.update(request).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n\r\n});\r\n\r\nrouter.delete('/delete', token_auth, (req, res) => {\r\n    //if(req.body.delete) {\r\n    var ID = <number>req.query.ID;\r\n    console.log (ID);\r\n    service.delete(ID).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n    // } else {\r\n    //     res.status(500).json({\r\n    //         message:\"You do not have permission to delete this permission entry.\"\r\n    //     })\r\n    // }\r\n});\r\n\r\n\r\nexport = router;"]}