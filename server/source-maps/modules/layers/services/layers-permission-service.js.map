{"version":3,"sources":["modules/layers/services/layers-permission-service.ts"],"names":[],"mappings":";AACA,IAAO,oBAAoB,WAAW,mCAAmC,CAAC,CAAC;AAC3E,IAAO,UAAU,WAAW,8BAA8B,CAAC,CAAA;AAG3D;IAAA;IAsEA,CAAC;IArEG,wCAAO,GAAP,UAAQ,YAAoB;QAExB,IAAI,WAAW,GAA0B;YACrC,KAAK,EAAE;gBACH,IAAI;aACP;SACJ,CAAC;QAEF,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACf,WAAW,CAAC,KAAK,GAAG;gBAChB,IAAI,EAAE;oBACF,EAAE,YAAY,EAAE,YAAY,EAAC;iBAChC;aACJ,CAAA;QACL,CAAC;QAED,WAAW,CAAC,OAAO,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;QACxC,MAAM,CAAC,oBAAoB,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC3D,CAAC;IAED,6CAAY,GAAZ,UAAa,MAAc;QAEvB,IAAI,WAAW,GAA0B;YACrC,KAAK,EAAE;gBACH,IAAI;aACP;SACJ,CAAC;QAEF,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACT,WAAW,CAAC,KAAK,GAAG;gBAChB,IAAI,EAAE;oBACF,EAAE,MAAM,EAAE,MAAM,EAAC;iBACpB;aACJ,CAAA;QACL,CAAC;QAED,WAAW,CAAC,OAAO,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;QACxC,MAAM,CAAC,oBAAoB,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC3D,CAAC;IAED,oCAAG,GAAH,UAAI,EAAU;QACV,MAAM,CAAC,oBAAoB,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,uCAAM,GAAN,UAAO,OAA4B;QAC/B,MAAM,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACtD,CAAC;IAED,uCAAM,GAAN,UAAO,OAA4B;QAE/B,MAAM,CAAM,CAAC,oBAAoB,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,uBAAuB;YAEtF,uBAAuB,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;YAC5D,uBAAuB,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;YAChD,uBAAuB,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;YAE5C,MAAM,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;QAC1C,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,uCAAM,GAAN,UAAO,EAAU;QAEb,MAAM,CAAC,oBAAoB,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,uBAAuB;YACxE,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAA;YACpC,MAAM,CAAC,uBAAuB,CAAC,OAAO,EAAE,CAAC;QAE7C,CAAC,CAAC,CAAC;IACP,CAAC;IAEL,6BAAC;AAAD,CAtEA,AAsEC,IAAA;AAED,iBAAS,sBAAsB,CAAC","file":"../../../../modules/layers/services/layers-permission-service.js","sourcesContent":["import Sequelize = require('sequelize');\r\nimport LayerPermissionModel = require('../models/layers-permission-model');\r\nimport LayerModel = require('../models/layers-admin-model')\r\n\r\n\r\nclass LayerPermissionService {\r\n    getList(layerAdminID: number): Promise<LayerPermissionModel.LayerPermissionInstance[]> {\r\n\r\n        var findOptions: Sequelize.FindOptions = {\r\n            order: [\r\n                'ID'\r\n            ]\r\n        };\r\n\r\n        if (layerAdminID) {\r\n            findOptions.where = {\r\n                $and: [\r\n                    { layerAdminID: layerAdminID}\r\n                ]\r\n            }\r\n        }\r\n\r\n        findOptions.include = [LayerModel.Model]\r\n        return LayerPermissionModel.Model.findAll(findOptions);\r\n    }\r\n\r\n    getUserLayer(userID: number): Promise<LayerPermissionModel.LayerPermissionInstance[]> {\r\n\r\n        var findOptions: Sequelize.FindOptions = {\r\n            order: [\r\n                'ID'\r\n            ]\r\n        };\r\n\r\n        if (userID) {\r\n            findOptions.where = {\r\n                $and: [\r\n                    { userID: userID}\r\n                ]\r\n            }\r\n        }\r\n\r\n        findOptions.include = [LayerModel.Model]\r\n        return LayerPermissionModel.Model.findAll(findOptions);\r\n    }\r\n\r\n    get(ID: number): Promise<LayerPermissionModel.LayerPermissionInstance> {\r\n        return LayerPermissionModel.Model.findById(ID);\r\n    }\r\n\r\n    create(request: App.LayerPermission): Promise<LayerPermissionModel.LayerPermissionInstance> {\r\n        return LayerPermissionModel.Model.create(request);\r\n    }\r\n\r\n    update(request: App.LayerPermission): Promise<LayerPermissionModel.LayerPermissionInstance> {\r\n        \r\n        return <any>(LayerPermissionModel.Model.findById(request.ID).then((LayerPermissionInstance) => {\r\n\r\n            LayerPermissionInstance.layerAdminID = request.layerAdminID;\r\n            LayerPermissionInstance.userID = request.userID;\r\n            LayerPermissionInstance.edit = request.edit;\r\n\r\n            return LayerPermissionInstance.save();\r\n        }));\r\n    }\r\n\r\n    delete(ID: number) {\r\n\r\n        return LayerPermissionModel.Model.findById(ID).then((LayerPermissionInstance) => {\r\n            console.log(LayerPermissionInstance)\r\n            return LayerPermissionInstance.destroy();\r\n\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport = LayerPermissionService;"]}