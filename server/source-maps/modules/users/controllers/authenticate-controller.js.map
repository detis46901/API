{"version":3,"sources":["modules/users/controllers/authenticate-controller.ts"],"names":[],"mappings":"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","file":"../../../../modules/users/controllers/authenticate-controller.js","sourcesContent":["//import UserService = require('../services/users-service');\r\nimport AuthService = require('../services/authenticate-service')\r\nimport UserModel = require('../models/user-model')\r\n\r\nvar express = require('express');\r\nvar router = express.Router();\r\nvar service = new AuthService();\r\n\r\nrouter.get('/list', (req, res) => {\r\n    service.getList(req.query.email, req.query.password).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n\r\n});\r\n\r\nrouter.get('/one', (req, res) => {\r\n\r\n    var User = <number>req.query.rowid;\r\n\r\n    service.get(User).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n\r\n});\r\n\r\nrouter.post('/', (req, res) => {\r\n\r\n    var request = <App.User>req.body;\r\n    var row = 0\r\n    var admin = false\r\n\r\n    service.getList(request.email, request.password).then((result) => {\r\n        row = result[0].ID\r\n        admin = result[0].administrator\r\n        if (result.length == 0) { res.send({}) } else { res.send(JSON.stringify({ token: 'fake-jwt-token2', userid: row, admin: admin })); }\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n\r\n});\r\n\r\nrouter.put('/update', (req, res) => {\r\n\r\n    var request = <App.User>req.body;\r\n\r\n    service.update(request).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n\r\n});\r\n\r\nrouter.delete('/delete', (req, res) => {\r\n\r\n    var rowID = <number>req.query.rowID;\r\n\r\n    service.delete(rowID).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n});\r\n\r\nexport = router;"]}