{"version":3,"sources":["modules/postGIS_layers/controllers/sql-controller.ts"],"names":[],"mappings":";AAAA,IAAO,UAAU,WAAW,yBAAyB,CAAC,CAAC;AACvD,IAAO,UAAU,WAAW,iCAAiC,CAAC,CAAC;AAG/D,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAE/B,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAAC,IAAM,YAAY,GAAG;IACjD,OAAO,EAAE,MAAM,CAAC,aAAa,EAAE;CAClC,CAAC;AACF,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAC9B,IAAI,OAAO,GAAG,IAAI,UAAU,EAAE,CAAC;AAE/B,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IACpC,IAAI,MAAM,GAAW,GAAG,CAAC,KAAK,CAAC,MAAM,CAAA;IACrC,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,CAAA;IAC3B,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QACnC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IAC1C,IAAI,MAAM,GAAW,GAAG,CAAC,KAAK,CAAC,MAAM,CAAA;IACrC,EAAE,CAAC,CAAC,MAAM,IAAI,SAAS,CAAC,CAAC,CAAC;QACtB,MAAM,GAAG,QAAQ,CAAA;IACrB,CAAC;IACD,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,6BAA6B;IAC7B,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QACzC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IAC1C,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAA;IACxB,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,IAAI,MAAM,GAAW,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC;IACtC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QACzC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IACvC,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAC9B,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IAC5C,IAAI,MAAM,GAAW,GAAG,CAAC,KAAK,CAAC,MAAM,CAAA;IACrC,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAA;IACnC,OAAO,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAC9C,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA;AAEF,MAAM,CAAC,GAAG,CAAC,mBAAmB,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IACjD,IAAI,MAAM,GAAW,GAAG,CAAC,KAAK,CAAC,MAAM,CAAA;IACrC,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAA;IACnC,IAAI,WAAW,GAAwB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA;IACxE,OAAO,CAAC,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAC7D,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IACpB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACnB,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA;AAEF,MAAM,CAAC,GAAG,CAAC,qBAAqB,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IACnD,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAC1C,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA;AAEF,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IAC1C,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,IAAI,IAAI,GAAW,GAAG,CAAC,KAAK,CAAC,IAAI,CAAA;IACjC,IAAI,KAAK,GAAY,GAAG,CAAC,KAAK,CAAC,KAAK,CAAA;IACpC,IAAI,WAAW,GAAwB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA;IACxE,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAClE,IAAI,UAAU,GAAW,EAAE,CAAA;QAC3B,IAAI,CAAC,GAAU,CAAC,CAAA;QAChB,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,CAAC;YAC9B,UAAU,GAAG,UAAU,GAAG,GAAG,GAAG,WAAW,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,CAAA;YAC7E,EAAE,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACzC,UAAU,GAAG,UAAU,GAAG,MAAM,CAAA;YACpC,CAAC;YACD,CAAC,GAAE,CAAC,CAAC,CAAA;QACT,CAAC,CAAC,CAAA;QACF,OAAO,CAAC,aAAa,CAAC,QAAQ,EAAE,KAAK,EAAE,WAAW,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAClF,CAAC,CAAC,CAAA;QACF,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IAC7C,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,IAAI,WAAW,GAAwB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA;IACxE,OAAO,CAAC,YAAY,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QACjD,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IACpB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACnB,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA;AAEF,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IAC3C,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,IAAI,WAAW,GAAwB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA;IACxE,OAAO,CAAC,UAAU,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAC/C,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACnB,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA;AAEF,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IAC5C,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IAEpC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QACnC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,qBAAqB,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IACnD,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IAEpC,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAC1C,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IACvC,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,IAAI,EAAE,GAAW,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;IAC9B,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QACrC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAA;AAEF,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IACvC,IAAI,MAAM,GAAW,GAAG,CAAC,KAAK,CAAC,MAAM,CAAA;IACrC,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAC1D,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAA;AAEF,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IAC5C,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,IAAI,EAAE,GAAW,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;IAC9B,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QACvC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAA;AAEF,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IAC1C,IAAI,MAAM,GAAW,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC;IACtC,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,IAAI,EAAE,GAAW,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;IAC9B,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAChD,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAA;AAEF,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IACpD,IAAI,OAAO,GAAsB,GAAG,CAAC,IAAI,CAAC;IAC1C,IAAI,KAAK,GAAW,OAAO,CAAC,KAAK,CAAC;IAClC,OAAO,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAC5C,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAA;AACF,MAAM,CAAC,IAAI,CAAC,wBAAwB,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IACvD,IAAI,IAAI,GAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAA;IAC9B,IAAI,OAAO,GAAsB,GAAG,CAAC,IAAI,CAAC;IAC1C,IAAI,KAAK,GAAW,OAAO,CAAC,KAAK,CAAC;IAClC,OAAO,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAC/C,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAA;AACF,MAAM,CAAC,IAAI,CAAC,2BAA2B,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IAC1D,IAAI,IAAI,GAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAA;IAC9B,IAAI,OAAO,GAAsB,GAAG,CAAC,IAAI,CAAC;IAC1C,OAAO,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAClD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;QACnB,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAA;AAEF,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,UAAU,GAAG,EAAE,GAAG;IAC7E,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAA;IACvB,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAClC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACjB,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,UAAU,GAAG,EAAE,GAAG;IAChF,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAA;IACvB,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QACjC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IACpB,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,UAAC,GAAG,EAAE,GAAG;IAC7B,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;QACtD,IAAI,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACxD,IAAI,UAAU,GAAG,IAAI,MAAM,CAAC,WAAW,EAAE,CAAC;QAC1C,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAE7B,GAAG,CAAC,GAAG,CAAC,qBAAqB,EAAE,uBAAuB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QAC9E,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;QACrC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAA,GAAG;QACR,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAA;AAEF,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,UAAC,GAAG,EAAE,GAAG;IAChC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;QAC3E,IAAI,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACxD,IAAI,UAAU,GAAG,IAAI,MAAM,CAAC,WAAW,EAAE,CAAC;QAC1C,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAE7B,GAAG,CAAC,GAAG,CAAC,qBAAqB,EAAE,uBAAuB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QAC9E,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;QACrC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAA,GAAG;QACR,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAA;AAEF,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IAC9C,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,IAAI,EAAE,GAAW,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;IAC9B,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QACzC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAA;AACF,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IAC1C,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,IAAI,QAAQ,GAAW,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC1C,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAC3C,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAA;AACF,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IAC7C,IAAI,MAAM,GAAW,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC;IACtC,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAC1D,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA;AACF,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IAC5C,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QACnC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACnB,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA;AACF,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IAC7C,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,IAAI,EAAE,GAAW,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;IAC9B,OAAO,CAAC,YAAY,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QACxC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACnB,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA;AACF,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IAChD,IAAI,MAAM,GAAW,GAAG,CAAC,KAAK,CAAC,MAAM,CAAA;IACrC,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,IAAI,EAAE,GAAW,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;IAC9B,OAAO,CAAC,eAAe,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QACnD,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACnB,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA;AACF,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IACvC,IAAI,KAAK,GAAW,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;IACnC,IAAI,EAAE,GAAW,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IAC7B,IAAI,KAAK,GAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IAC/C,IAAI,IAAI,GAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;IAC7C,IAAI,KAAK,GAAQ,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IAE5C,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QACtD,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IAChD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IAChB,IAAI,MAAM,GAAW,GAAG,CAAC,IAAI,CAAC,MAAM,CAAA;IACpC,IAAI,KAAK,GAAW,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;IACnC,IAAI,EAAE,GAAW,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;IAC7B,IAAI,KAAK,GAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IAC/C,IAAI,IAAI,GAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;IAC7C,IAAI,KAAK,GAAQ,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IAE5C,OAAO,CAAC,eAAe,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QACvE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IACxC,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAC/B,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA;AAEF,2CAA2C;AAE3C,qCAAqC;AACrC,wBAAwB;AACxB,4CAA4C;AAC5C,4BAA4B;AAC5B,4BAA4B;AAC5B,2BAA2B;AAC3B,UAAU;AAEV,KAAK;AACL,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IACvC,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IAEpC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAC9B,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;IAC/C,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;IACpC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QACtC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;QAC3C,IAAI,GAAG,GAAW,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;QAChC,IAAI,KAAK,GAAW,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;QACpC,OAAO,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACvC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;YACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC,CAAC,CAAA;IACN,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA;AAEF,iBAAS,MAAM,CAAC","file":"../../../../modules/postGIS_layers/controllers/sql-controller.js","sourcesContent":["import SQLService = require('../services/sql-service');\r\nimport token_auth = require('../../JWT_Checker/loginToken.js');\r\nimport comment = require('../models/postGIS_layers.model')\r\nimport { error } from 'util';\r\nvar stream = require('stream');\r\n\r\nvar express = require('express');\r\nvar multer = require('multer'); const multerConfig = {\r\n    storage: multer.memoryStorage()\r\n};\r\nvar router = express.Router();\r\nvar service = new SQLService();\r\n\r\nrouter.get('/all', token_auth, (req, res) => {\r\n    var schema = <string>req.query.schema\r\n    var table = <string>req.query.table;\r\n    schema = \"'\" + schema + \"'\"\r\n    service.get(schema, table).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n\r\n});\r\n\r\nrouter.get('/getsheets', token_auth, (req, res) => {\r\n    var schema = <string>req.query.schema\r\n    if (schema == undefined) {\r\n        schema = 'mycube'\r\n    }\r\n    var table = <string>req.query.table;\r\n    //schema = \"'\" + schema + \"'\"\r\n    service.getsheets(schema, table).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n\r\n});\r\n\r\nrouter.get('/getschema', token_auth, (req, res) => {\r\n    console.log('getschema')\r\n    var table = <string>req.query.table;\r\n    var schema = <string>req.query.schema;\r\n    service.getschema(schema, table).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n});\r\n\r\nrouter.get('/create', token_auth, (req, res) => {\r\n    var table = <string>req.query.table;\r\n    service.create(table).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n});\r\n\r\nrouter.get('/constraints', token_auth, (req, res) => {\r\n    var schema = <string>req.query.schema\r\n    var table = <string>req.query.table\r\n    service.getConstraints(schema, table).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    })\r\n})\r\n\r\nrouter.get('/updateconstraint', token_auth, (req, res) => {\r\n    var schema = <string>req.query.schema\r\n    var table = <string>req.query.table\r\n    var myCubeField = <comment.MyCubeField>JSON.parse(req.query.myCubeField)\r\n    service.updateConstraint(schema, table, myCubeField).then((result) => {\r\n        res.send(result)\r\n    }).catch((error) => {\r\n        res.send(error)\r\n    })\r\n})\r\n\r\nrouter.get('/createcommenttable', token_auth, (req, res) => {\r\n    var table = <string>req.query.table;\r\n    service.createCommentTable(table).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    })\r\n})\r\n\r\nrouter.get('/addColumn', token_auth, (req, res) => {\r\n    var table = <string>req.query.table;\r\n    var field = <string>req.query.field;\r\n    var type = <string>req.query.type\r\n    var label = <boolean>req.query.label\r\n    var myCubeField = <comment.MyCubeField>JSON.parse(req.query.myCubeField)\r\n    service.addColumn(table, field, type, label, myCubeField).then((result) => {\r\n        var constraint: string = \"\"\r\n        var i:number = 0\r\n        myCubeField.constraints.forEach((x) => {\r\n            constraint = constraint + '\"' + myCubeField.field + '\"' + \"='\" + x.name + \"'\"\r\n            if (i < myCubeField.constraints.length - 1) {\r\n                constraint = constraint + \" OR \"\r\n            }\r\n            i =+1\r\n        })\r\n        service.addConstraint('mycube', table, myCubeField.field, constraint).then((result) => {\r\n        })\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n});\r\n\r\nrouter.get('/deleteColumn', token_auth, (req, res) => {\r\n    var table = <string>req.query.table;\r\n    var myCubeField = <comment.MyCubeField>JSON.parse(req.query.myCubeField)\r\n    service.deleteColumn(table, myCubeField).then((result) => {\r\n        res.send(result)\r\n    }).catch((error) => {\r\n        res.send(error)\r\n    })\r\n})\r\n\r\nrouter.get('/moveColumn', token_auth, (req, res) => {\r\n    var table = <string>req.query.table;\r\n    var myCubeField = <comment.MyCubeField>JSON.parse(req.query.myCubeField)\r\n    service.moveColumn(table, myCubeField).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error)\r\n    })\r\n})\r\n\r\nrouter.get('/deleteTable', token_auth, (req, res) => {\r\n    var table = <string>req.query.table;\r\n\r\n    service.deleteTable(table).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n\r\n});\r\n\r\nrouter.get('/deletecommenttable', token_auth, (req, res) => {\r\n    var table = <string>req.query.table;\r\n\r\n    service.deleteCommentTable(table).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n\r\n});\r\n\r\nrouter.get('/single', token_auth, (req, res) => {\r\n    var table = <string>req.query.table;\r\n    var id = <string>req.query.id;\r\n    service.getsingle(table, id).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n})\r\n\r\nrouter.get('/anyone', token_auth, (req, res) => {\r\n    var schema = <string>req.query.schema\r\n    var table = <string>req.query.table;\r\n    var field = <string>req.query.field;\r\n    var value = <string>req.query.value;\r\n    service.getanysingle(schema, table, field, value).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n})\r\n\r\nrouter.get('/getcomments', token_auth, (req, res) => {\r\n    var table = <string>req.query.table;\r\n    var id = <string>req.query.id;\r\n    service.getcomments(table, id).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n})\r\n\r\nrouter.get('/singlelog', token_auth, (req, res) => {\r\n    var schema = <string>req.query.schema;\r\n    var table = <string>req.query.table;\r\n    var id = <string>req.query.id;\r\n    service.getSingleLog(schema, table, id).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n})\r\n\r\nrouter.post('/addcommentwithgeom', token_auth, (req, res) => {\r\n    var comment = <App.MyCubeComment>req.body;\r\n    var table = <number>comment.table;\r\n    service.addCommentWithGeom(comment).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n})\r\nrouter.post('/addcommentwithoutgeom', token_auth, (req, res) => {\r\n    var file = <File>req.body.file\r\n    var comment = <App.MyCubeComment>req.body;\r\n    var table = <number>comment.table;\r\n    service.addCommentWithoutGeom(comment).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n})\r\nrouter.post('/addanycommentwithoutgeom', token_auth, (req, res) => {\r\n    var file = <File>req.body.file\r\n    var comment = <App.MyCubeComment>req.body;\r\n    service.addAnyCommentWithoutGeom(comment).then((result) => {\r\n        console.log(result)\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n})\r\n\r\nrouter.post('/addimage', multer(multerConfig).single('photo'), function (req, res) {\r\n    console.log('addImage')\r\n    service.addImage(req).then((result) => {\r\n    res.send(result);\r\n    })\r\n});\r\n\r\nrouter.post('/addanyimage', multer(multerConfig).single('photo'), function (req, res) {\r\n    console.log('addImage')\r\n    service.addAnyImage(req).then((result) => {\r\n        res.send(result)\r\n    })\r\n});\r\n\r\nrouter.get('/getimage', (req, res) => {\r\n    service.getImage(req.query.table, req.query.id).then((file) => {\r\n        var fileContents = Buffer.from(file[0][0].file, \"utf8\");\r\n        var readStream = new stream.PassThrough();\r\n        readStream.end(fileContents);\r\n\r\n        res.set('Content-disposition', 'attachment; filename=' + file[0][0].filename);\r\n        res.set('Content-Type', 'image/png');\r\n        readStream.pipe(res);\r\n    }).catch(err => {\r\n        res.json({ msg: 'Error', detail: err });\r\n    });\r\n})\r\n\r\nrouter.get('/getanyimage', (req, res) => {\r\n    service.getAnyImage(req.query.schema, req.query.table, req.query.id).then((file) => {\r\n        var fileContents = Buffer.from(file[0][0].file, \"utf8\");\r\n        var readStream = new stream.PassThrough();\r\n        readStream.end(fileContents);\r\n\r\n        res.set('Content-disposition', 'attachment; filename=' + file[0][0].filename);\r\n        res.set('Content-Type', 'image/png');\r\n        readStream.pipe(res);\r\n    }).catch(err => {\r\n        res.json({ msg: 'Error', detail: err });\r\n    });\r\n})\r\n\r\nrouter.get('/deletecomment', token_auth, (req, res) => {\r\n    var table = <string>req.query.table;\r\n    var id = <string>req.query.id;\r\n    service.deleteComment(table, id).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n})\r\nrouter.get('/addRecord', token_auth, (req, res) => {\r\n    let table = <string>req.query.table;\r\n    let geometry = <string>req.query.geometry;\r\n    service.addRecord(table, geometry).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n})\r\nrouter.get('/addAnyRecord', token_auth, (req, res) => {\r\n    let schema = <string>req.query.schema;\r\n    let table = <string>req.query.table;\r\n    let field = <string>req.query.field;\r\n    let value = <string>req.query.value;\r\n    service.addAnyRecord(schema, table, field, value).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    })\r\n})\r\nrouter.get('/fixGeometry', token_auth, (req, res) => {\r\n    let table = <string>req.query.table;\r\n    service.fixGeometry(table).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error)\r\n    })\r\n})\r\nrouter.get('/deleteRecord', token_auth, (req, res) => {\r\n    let table = <string>req.query.table;\r\n    let id = <string>req.query.id;\r\n    service.deleteRecord(table, id).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error)\r\n    })\r\n})\r\nrouter.get('/deleteAnyRecord', token_auth, (req, res) => {\r\n    let schema = <string>req.query.schema\r\n    let table = <string>req.query.table;\r\n    let id = <string>req.query.id;\r\n    service.deleteAnyRecord(schema, table, id).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error)\r\n    })\r\n})\r\nrouter.put('/update', token_auth, (req, res) => {\r\n    var table = <string>req.body.table;\r\n    var id = <string>req.body.id;\r\n    var field = <string>req.body.mycubefield.field;\r\n    var type = <string>req.body.mycubefield.type;\r\n    var value = <any>req.body.mycubefield.value;\r\n\r\n    service.update(table, id, field, type, value).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n\r\n});\r\n\r\nrouter.put('/updateAnyRecord', token_auth, (req, res) => {\r\n    console.log(req)\r\n    var schema = <string>req.body.schema\r\n    var table = <string>req.body.table;\r\n    var id = <string>req.body.id;\r\n    var field = <string>req.body.mycubefield.field;\r\n    var type = <string>req.body.mycubefield.type;\r\n    var value = <any>req.body.mycubefield.value;\r\n\r\n    service.updateAnyRecord(schema, table, id, field, type, value).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n\r\n});\r\n\r\nrouter.get('/setSRID', token_auth, (req, res) => {\r\n    var table = <string>req.query.table;\r\n    service.setSRID(table).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    })\r\n})\r\n\r\n// router.delete('/delete', (req, res) => {\r\n\r\n//     var ID = <number>req.query.ID;\r\n//     console.log (ID);\r\n//     service.delete(ID).then((result) => {\r\n//         res.send(result);\r\n//     }).catch((error) => {\r\n//         res.send(error);\r\n//     });\r\n\r\n//});\r\nrouter.get('/getOID', token_auth, (req, res) => {\r\n    var table = <string>req.query.table;\r\n\r\n    service.getOID(table).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n\r\n});\r\n\r\nrouter.get('/getColumnCount', token_auth, (req, res) => {\r\n    var table = <string>req.query.table;\r\n    service.getColumnCount(table).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n\r\n    router.get('/getIsLabel', token_auth, (req, res) => {\r\n        var oid = <number>req.query.oid;\r\n        var field = <number>req.query.field;\r\n        service.getIsLabel(oid, field).then((result) => {\r\n            res.send(result);\r\n        }).catch((error) => {\r\n            res.send(error);\r\n        })\r\n    })\r\n})\r\n\r\nexport = router;"]}