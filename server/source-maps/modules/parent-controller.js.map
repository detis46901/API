{
    "version": 3,
    "sources": [
        "modules/parent-controller.ts"
    ],
    "names": [],
    "mappings": ";AAAA,IAAO,OAAO,WAAW,SAAS,CAAC,CAAC;AAKpC,oDAAoD;AAEpD,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAC9B,IAAI,OAAO,CAAA,CAAC,wBAAwB;AACpC,wDAAwD;AAExD,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,UAAC,GAAG,EAAE,GAAG;IACzB,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QAC/C,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,UAAC,GAAG,EAAE,GAAG;IACxB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QACrC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,UAAC,GAAG,EAAE,GAAG;IAC3B,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QACjC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,UAAC,GAAG,EAAE,GAAG;IAC9B,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;QACrC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,iBAAS,MAAM,CAAC",
    "file": "../../modules/parent-controller.js",
    "sourcesContent": [
        "import express = require('express');\r\nimport Sequelize = require('sequelize');\r\nimport jwt = require('jsonwebtoken');\r\nimport bcrypt = require('bcrypt');\r\nimport token_auth = require('./JWT_Checker/loginToken');\r\n//import ParentService = require('./parent-service')\r\n\r\nvar router = express.Router();\r\nvar service //= new ParentService();\r\n//\"var service = new ______Service()\" in child component\r\n\r\nrouter.get('/list', (req, res) => {\r\n    service.getList(req.query.searchValue).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });   \r\n});\r\n\r\nrouter.get('/one', (req, res) => {   \r\n    service.get(req.query.rowid).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n});\r\n\r\nrouter.put('/update', (req, res) => {\r\n    service.update(req.body).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n});\r\n\r\nrouter.delete('/delete', (req, res) => {\r\n    service.delete(req.query.ID).then((result) => {\r\n        res.send(result);\r\n    }).catch((error) => {\r\n        res.send(error);\r\n    });\r\n});\r\n\r\nexport = router;"
    ]
}